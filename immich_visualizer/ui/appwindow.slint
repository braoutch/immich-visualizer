import { HorizontalBox, VerticalBox, TextEdit, LineEdit, Button } from "std-widgets.slint";

export component AppWindow inherits Window {
    title: "QRNote";
    icon: @image-url("../resources/psyduck.png");
    in-out property<image> qrnote: @image-url("../resources/psyduck.png");
    out property<string> thetext: "";
    in property<string> errormsg: "";
    in property<int> charcount: 0;
    in property<int> qr_size: 150;
    callback text-is-edited();
    VerticalBox {
        TextEdit {
            text: thetext;
            preferred-width: 300px;
            preferred-height: 300px;
            edited(text) => {
                thetext = text;
                root.text-is-edited();
            }
        }
        LineEdit {
            text: charcount;
            preferred-width: 300px;
            read-only: true;
            horizontal-alignment: center;
        }
        Image {
            source : qrnote;
            preferred-width: qr_size*1px;
            preferred-height:qr_size*1px;
        }
        LineEdit {
            text: errormsg;
            preferred-width: 300px;
            read-only: true;
            horizontal-alignment: center;
        }
    }
}

component SettingsButton inherits Rectangle {
    callback clicked;
    in property <bool> pressed;

    opacity: touchArea.pressed ? 100% : 60%;
    animate opacity { duration: 50ms;  }
    background: #b6b6b600;

    Image {
        source: @image-url("../resources/settings.png");
        width: parent.width * 0.9;
        height: parent.height * 0.9;
    }

    Rectangle {
        border-radius: 15px;
        width: parent.width;
        height: parent.height;
        //color: touchArea.pressed ? #00000050 : #00000000;
        background: #9a9a9a;
        border-color: #262626;
        z: -1;
    }

    touchArea := TouchArea {

        clicked => {
            // Delegate to the user of this element
            root.clicked();
        }
    }
}

component MemoryTile inherits Rectangle {
    // width: 1280px;
    // height: 720px;
    width: 100%;
    height: 100%;
    background: #000000;

    in-out property <image> image_source;
    in-out property <string> image_text;

    Image {
        source: root.image_source;
        image-fit: contain;
        // width: parent.width;
        height: parent.height;
    }
}

export component MyWindow inherits Window {
    in property <image> image_source;
    in property <string> image_text;
    in-out property <int> click_count;
    in-out property <int> click_count_native;
    in-out property <int> state;
    callback settings-clicked();

    states [
        main-view when state == 0: {
            // circle1.x: 0px; circle1.y: 40px; circle1.background: green;
            // circle2.x: 0px; circle2.y: 0px; circle2.background: blue;
        }
        settings-view when state == 1: {
            // circle1.x: 170px; circle1.y: 70px; circle1.background: green;
            // circle2.x: 170px; circle2.y: 00px; circle2.background: blue;
        }
    ]

    memoryTile := MemoryTile {
        image_source: root.image_source;
    }

    settingsButtonCustom := SettingsButton {
        x: root.width * 0.93;
        y: parent.height * 0.02 * root.width/root.height;
        width: 5%;
        height: self.width;// So that it's a square
        clicked => { 
            root.click_count += 1;
            if root.state == 0
            {
                root.state = 206;
            } else {
                root.state = -root.state;
            } 
            settings-clicked(); 
        }    
    }
}