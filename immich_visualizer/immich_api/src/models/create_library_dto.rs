/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateLibraryDto {
    #[serde(rename = "exclusionPatterns", skip_serializing_if = "Option::is_none")]
    pub exclusion_patterns: Option<Vec<String>>,
    #[serde(rename = "importPaths", skip_serializing_if = "Option::is_none")]
    pub import_paths: Option<Vec<String>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "ownerId")]
    pub owner_id: uuid::Uuid,
}

impl CreateLibraryDto {
    pub fn new(owner_id: uuid::Uuid) -> CreateLibraryDto {
        CreateLibraryDto {
            exclusion_patterns: None,
            import_paths: None,
            name: None,
            owner_id,
        }
    }
}

