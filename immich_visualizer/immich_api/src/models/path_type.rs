/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PathType {
    #[serde(rename = "original")]
    Original,
    #[serde(rename = "preview")]
    Preview,
    #[serde(rename = "thumbnail")]
    Thumbnail,
    #[serde(rename = "encoded_video")]
    EncodedVideo,
    #[serde(rename = "sidecar")]
    Sidecar,
    #[serde(rename = "face")]
    Face,
    #[serde(rename = "profile")]
    Profile,

}

impl std::fmt::Display for PathType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Original => write!(f, "original"),
            Self::Preview => write!(f, "preview"),
            Self::Thumbnail => write!(f, "thumbnail"),
            Self::EncodedVideo => write!(f, "encoded_video"),
            Self::Sidecar => write!(f, "sidecar"),
            Self::Face => write!(f, "face"),
            Self::Profile => write!(f, "profile"),
        }
    }
}

impl Default for PathType {
    fn default() -> PathType {
        Self::Original
    }
}

