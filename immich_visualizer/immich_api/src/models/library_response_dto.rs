/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LibraryResponseDto {
    #[serde(rename = "assetCount")]
    pub asset_count: i32,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "exclusionPatterns")]
    pub exclusion_patterns: Vec<String>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "importPaths")]
    pub import_paths: Vec<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "ownerId")]
    pub owner_id: String,
    #[serde(rename = "refreshedAt", deserialize_with = "Option::deserialize")]
    pub refreshed_at: Option<String>,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
}

impl LibraryResponseDto {
    pub fn new(asset_count: i32, created_at: String, exclusion_patterns: Vec<String>, id: String, import_paths: Vec<String>, name: String, owner_id: String, refreshed_at: Option<String>, updated_at: String) -> LibraryResponseDto {
        LibraryResponseDto {
            asset_count,
            created_at,
            exclusion_patterns,
            id,
            import_paths,
            name,
            owner_id,
            refreshed_at,
            updated_at,
        }
    }
}

