/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TranscodePolicy {
    #[serde(rename = "all")]
    All,
    #[serde(rename = "optimal")]
    Optimal,
    #[serde(rename = "bitrate")]
    Bitrate,
    #[serde(rename = "required")]
    Required,
    #[serde(rename = "disabled")]
    Disabled,

}

impl std::fmt::Display for TranscodePolicy {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::All => write!(f, "all"),
            Self::Optimal => write!(f, "optimal"),
            Self::Bitrate => write!(f, "bitrate"),
            Self::Required => write!(f, "required"),
            Self::Disabled => write!(f, "disabled"),
        }
    }
}

impl Default for TranscodePolicy {
    fn default() -> TranscodePolicy {
        Self::All
    }
}

