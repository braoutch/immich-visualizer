/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateAlbumDto {
    #[serde(rename = "albumName", skip_serializing_if = "Option::is_none")]
    pub album_name: Option<String>,
    #[serde(rename = "albumThumbnailAssetId", skip_serializing_if = "Option::is_none")]
    pub album_thumbnail_asset_id: Option<uuid::Uuid>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "isActivityEnabled", skip_serializing_if = "Option::is_none")]
    pub is_activity_enabled: Option<bool>,
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<models::AssetOrder>,
}

impl UpdateAlbumDto {
    pub fn new() -> UpdateAlbumDto {
        UpdateAlbumDto {
            album_name: None,
            album_thumbnail_asset_id: None,
            description: None,
            is_activity_enabled: None,
            order: None,
        }
    }
}

