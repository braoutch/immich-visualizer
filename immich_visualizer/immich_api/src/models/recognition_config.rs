/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RecognitionConfig {
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "maxDistance")]
    pub max_distance: f32,
    #[serde(rename = "minFaces")]
    pub min_faces: i32,
    #[serde(rename = "minScore")]
    pub min_score: f32,
    #[serde(rename = "modelName")]
    pub model_name: String,
    #[serde(rename = "modelType", skip_serializing_if = "Option::is_none")]
    pub model_type: Option<models::ModelType>,
}

impl RecognitionConfig {
    pub fn new(enabled: bool, max_distance: f32, min_faces: i32, min_score: f32, model_name: String) -> RecognitionConfig {
        RecognitionConfig {
            enabled,
            max_distance,
            min_faces,
            min_score,
            model_name,
            model_type: None,
        }
    }
}

