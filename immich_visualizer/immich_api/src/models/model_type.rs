/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ModelType {
    #[serde(rename = "facial-recognition")]
    FacialRecognition,
    #[serde(rename = "clip")]
    Clip,

}

impl std::fmt::Display for ModelType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::FacialRecognition => write!(f, "facial-recognition"),
            Self::Clip => write!(f, "clip"),
        }
    }
}

impl Default for ModelType {
    fn default() -> ModelType {
        Self::FacialRecognition
    }
}

