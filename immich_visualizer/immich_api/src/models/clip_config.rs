/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClipConfig {
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<models::ClipMode>,
    #[serde(rename = "modelName")]
    pub model_name: String,
    #[serde(rename = "modelType", skip_serializing_if = "Option::is_none")]
    pub model_type: Option<models::ModelType>,
}

impl ClipConfig {
    pub fn new(enabled: bool, model_name: String) -> ClipConfig {
        ClipConfig {
            enabled,
            mode: None,
            model_name,
            model_type: None,
        }
    }
}

