/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.105.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserAdminUpdateDto {
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    #[serde(rename = "quotaSizeInBytes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub quota_size_in_bytes: Option<Option<i64>>,
    #[serde(rename = "shouldChangePassword", skip_serializing_if = "Option::is_none")]
    pub should_change_password: Option<bool>,
    #[serde(rename = "storageLabel", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub storage_label: Option<Option<String>>,
}

impl UserAdminUpdateDto {
    pub fn new() -> UserAdminUpdateDto {
        UserAdminUpdateDto {
            email: None,
            name: None,
            password: None,
            quota_size_in_bytes: None,
            should_change_password: None,
            storage_label: None,
        }
    }
}

